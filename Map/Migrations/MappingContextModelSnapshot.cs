// <auto-generated />
using Map.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Map.Migrations
{
    [DbContext(typeof(MappingContext))]
    partial class MappingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Map.Models.MapColor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<byte>("Alpha")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Blue")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Green")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Red")
                        .HasColumnType("tinyint");

                    b.Property<string>("ValueStr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MapColor", (string)null);
                });

            modelBuilder.Entity("Map.Models.MapUnit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("ConvertRate")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MapUnit", (string)null);
                });

            modelBuilder.Entity("Map.Models.RasterLayer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Alpha")
                        .HasColumnType("int");

                    b.Property<int>("BlueTranslation")
                        .HasColumnType("int");

                    b.Property<bool>("GrayScale")
                        .HasColumnType("bit");

                    b.Property<int>("GreenTranslation")
                        .HasColumnType("int");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("LayerFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LayerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Nagative")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RedTranslation")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("RasterLayer", (string)null);
                });

            modelBuilder.Entity("Map.Models.VectorLayer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("BoundaryVisible")
                        .HasColumnType("bit");

                    b.Property<bool>("CreateSpatialIdx")
                        .HasColumnType("bit");

                    b.Property<int>("EPSGID")
                        .HasColumnType("int");

                    b.Property<int>("FillColor")
                        .HasColumnType("int");

                    b.Property<int>("HighlightTextColor")
                        .HasColumnType("int");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<int>("LabelSize")
                        .HasColumnType("int");

                    b.Property<bool>("LabelVisible")
                        .HasColumnType("bit");

                    b.Property<string>("LabelingDataField")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LayerDBName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LayerTableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LayerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PenColor")
                        .HasColumnType("int");

                    b.Property<int>("SelectedFillColor")
                        .HasColumnType("int");

                    b.Property<int>("SelectedPenColor")
                        .HasColumnType("int");

                    b.Property<int>("TextColor")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("VectorLayer", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
